import streamlit as st
import time
import os
from datetime import timedelta

st.set_page_config(page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ö—ç–Ω–¥–∏–º–µ–Ω–∞", layout="centered")

st.title("üõ† –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã")

start_time_file = "start_time.txt"

# üì• –í–≤–æ–¥ —Å—Ç–∞–≤–∫–∏ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
rate = st.number_input("üíµ –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ ($)", min_value=0.0, value=60.0, step=1.0)
min_hours = st.number_input("‚è± –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (–≤ —á–∞—Å–∞—Ö)", min_value=0.0, value=2.0, step=0.5)

# ‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç
if st.button("‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç —Ç–∞–π–º–µ—Ä–∞"):
    with open(start_time_file, "w") as f:
        f.write(str(time.time()))
    st.success("‚úÖ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω. –ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äî –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è.")

# üóë –°–±—Ä–æ—Å
if st.button("üóë –°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä"):
    if os.path.exists(start_time_file):
        os.remove(start_time_file)
        st.info("‚ôªÔ∏è –¢–∞–π–º–µ—Ä —Å–±—Ä–æ—à–µ–Ω.")
    else:
        st.warning("‚õîÔ∏è –¢–∞–π–º–µ—Ä –µ—â—ë –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω.")

# üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω)
if os.path.exists(start_time_file):
    st.experimental_rerun()
    time.sleep(2)

    with open(start_time_file, "r") as f:
        start_time = float(f.read())

    now = time.time()
    elapsed_seconds = now - start_time
    elapsed_td = timedelta(seconds=int(elapsed_seconds))
    elapsed_hours = elapsed_seconds / 3600
    billable_hours = max(elapsed_hours, min_hours)
    total_cost = billable_hours * rate

    st.info(f"‚è≥ –ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: **{elapsed_td}**")
    st.write(f"üíº –û–ø–ª–∞—á–∏–≤–∞–µ–º–æ–µ –≤—Ä–µ–º—è: **{billable_hours:.2f} —á**")
    st.write(f"üí∞ –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: **${total_cost:.2f}**")

# ‚èπ –°—Ç–æ–ø
if st.button("‚èπ –°—Ç–æ–ø —Ç–∞–π–º–µ—Ä–∞"):
    if os.path.exists(start_time_file):
        with open(start_time_file, "r") as f:
            start_time = float(f.read())
        end_time = time.time()
        elapsed_seconds = end_time - start_time
        elapsed_td = timedelta(seconds=int(elapsed_seconds))
        elapsed_hours = elapsed_seconds / 3600
        billable_hours = max(elapsed_hours, min_hours)
        total_cost = billable_hours * rate

        st.success("üõë –¢–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        st.write(f"‚è∞ –û–±—â–µ–µ –≤—Ä–µ–º—è: **{elapsed_td}**")
        st.write(f"üì¶ –û–ø–ª–∞—á–∏–≤–∞–µ–º–æ–µ –≤—Ä–µ–º—è: **{billable_hours:.2f} —á**")
        st.write(f"üí≤ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: **${total_cost:.2f}**")

        os.remove(start_time_file)
    else:
        st.warning("‚ùóÔ∏è–¢–∞–π–º–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω.")
